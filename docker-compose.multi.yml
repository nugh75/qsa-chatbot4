services:
  # Database Agrusti
  postgres-agrusti:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env.agrusti
    ports:
      - "5531:5432"
    volumes:
      - pgdata-agrusti:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-qsa_user} -d $${POSTGRES_DB:-qsa_chatbot}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  # Database Counselorbot
  postgres-counselorbot:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env.counselorbot
    ports:
      - "5532:5432"
    volumes:
      - pgdata-counselorbot:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-qsa_user} -d $${POSTGRES_DB:-qsa_chatbot}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  # Database EduRAG
  postgres-edurag:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env.edurag
    ports:
      - "5533:5432"
    volumes:
      - pgdata-edurag:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-qsa_user} -d $${POSTGRES_DB:-qsa_chatbot}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  # Database Margottini
  postgres-margottini:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env.margottini
    ports:
      - "5534:5432"
    volumes:
      - pgdata-margottini:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-qsa_user} -d $${POSTGRES_DB:-qsa_chatbot}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  # Database PEF
  postgres-pef:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env.pef
    ports:
      - "5535:5432"
    volumes:
      - pgdata-pef:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-qsa_user} -d $${POSTGRES_DB:-qsa_chatbot}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  # Database Dragoni
  postgres-dragoni:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env.dragoni
    ports:
      - "5536:5432"
    volumes:
      - pgdata-dragoni:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-qsa_user} -d $${POSTGRES_DB:-qsa_chatbot}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  # Container Agrusti
  backend-agrusti:
    build: ./backend
    restart: unless-stopped
    env_file:
      - .env.agrusti
    ports:
      - "8111:8005"
    volumes:
      - ./backend/storage:/app/storage
      - ./backend/storage/prompts:/app/storage/prompts
      - ./backend/storage/personalities:/app/storage/personalities
      - ./backend/storage/summary:/app/storage/summary
      - ./backend/storage/welcome-guide:/app/storage/welcome-guide
      - ./backend/storage/avatars:/app/storage/avatars
      - ./backend/storage/logs-agrusti:/app/storage/logs
      - ./backend/storage/pipeline:/app/storage/pipeline
      - ./backend/models:/app/models
      - ./backend/config:/app/config
      - ./.env.agrusti:/app/.env:ro
    depends_on:
      postgres-agrusti:
        condition: service_healthy

  frontend-agrusti:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_TARGET: http://backend-agrusti:8005
        VITE_SITE_NAME: agrusti
    restart: unless-stopped
    ports:
      - "5171:5175"
    depends_on:
      - backend-agrusti

  # Container Counselor Bot
  backend-counselorbot:
    build: ./backend
    restart: unless-stopped
    env_file:
      - .env.counselorbot
    ports:
      - "8112:8005"
    volumes:
      - ./backend/storage:/app/storage
      - ./backend/storage/prompts:/app/storage/prompts
      - ./backend/storage/personalities:/app/storage/personalities
      - ./backend/storage/summary:/app/storage/summary
      - ./backend/storage/welcome-guide:/app/storage/welcome-guide
      - ./backend/storage/avatars:/app/storage/avatars
      - ./backend/storage/logs-counselorbot:/app/storage/logs
      - ./backend/storage/pipeline:/app/storage/pipeline
      - ./backend/models:/app/models
      - ./backend/config:/app/config
      - ./.env.counselorbot:/app/.env:ro
    depends_on:
      postgres-counselorbot:
        condition: service_healthy

  frontend-counselorbot:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_TARGET: http://backend-counselorbot:8005
        VITE_SITE_NAME: counselorbot
    restart: unless-stopped
    ports:
      - "5172:5175"
    depends_on:
      - backend-counselorbot

  # Container EduRAG
  backend-edurag:
    build: ./backend
    restart: unless-stopped
    env_file:
      - .env.edurag
    ports:
      - "8113:8005"
    volumes:
      - ./backend/storage:/app/storage
      - ./backend/storage/prompts:/app/storage/prompts
      - ./backend/storage/personalities:/app/storage/personalities
      - ./backend/storage/summary:/app/storage/summary
      - ./backend/storage/welcome-guide:/app/storage/welcome-guide
      - ./backend/storage/avatars:/app/storage/avatars
      - ./backend/storage/logs-edurag:/app/storage/logs
      - ./backend/storage/pipeline:/app/storage/pipeline
      - ./backend/models:/app/models
      - ./backend/config:/app/config
      - ./.env.edurag:/app/.env:ro
    depends_on:
      postgres-edurag:
        condition: service_healthy

  frontend-edurag:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_TARGET: http://backend-edurag:8005
        VITE_SITE_NAME: edurag
    restart: unless-stopped
    ports:
      - "5173:5175"
    depends_on:
      - backend-edurag

  # Container Margottini
  backend-margottini:
    build: ./backend
    restart: unless-stopped
    env_file:
      - .env.margottini
    ports:
      - "8114:8005"
    volumes:
      - ./backend/storage:/app/storage
      - ./backend/storage/prompts:/app/storage/prompts
      - ./backend/storage/personalities:/app/storage/personalities
      - ./backend/storage/summary:/app/storage/summary
      - ./backend/storage/welcome-guide:/app/storage/welcome-guide
      - ./backend/storage/avatars:/app/storage/avatars
      - ./backend/storage/logs-margottini:/app/storage/logs
      - ./backend/storage/pipeline:/app/storage/pipeline
      - ./backend/models:/app/models
      - ./backend/config:/app/config
      - ./.env.margottini:/app/.env:ro
    depends_on:
      postgres-margottini:
        condition: service_healthy

  frontend-margottini:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_TARGET: http://backend-margottini:8005
        VITE_SITE_NAME: margottini
    restart: unless-stopped
    ports:
      - "5174:5175"
    depends_on:
      - backend-margottini

  # Container PEF
  backend-pef:
    build: ./backend
    restart: unless-stopped
    env_file:
      - .env.pef
    ports:
      - "8115:8005"
    volumes:
      - ./backend/storage:/app/storage
      - ./backend/storage/prompts:/app/storage/prompts
      - ./backend/storage/personalities:/app/storage/personalities
      - ./backend/storage/summary:/app/storage/summary
      - ./backend/storage/welcome-guide:/app/storage/welcome-guide
      - ./backend/storage/avatars:/app/storage/avatars
      - ./backend/storage/logs-pef:/app/storage/logs
      - ./backend/storage/pipeline:/app/storage/pipeline
      - ./backend/models:/app/models
      - ./backend/config:/app/config
      - ./.env.pef:/app/.env:ro
    depends_on:
      postgres-pef:
        condition: service_healthy

  frontend-pef:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_TARGET: http://backend-pef:8005
        VITE_SITE_NAME: pef
    restart: unless-stopped
    ports:
      - "5175:5175"
    depends_on:
      - backend-pef

  # Container Dragoni
  backend-dragoni:
    build: ./backend
    restart: unless-stopped
    env_file:
      - .env.dragoni
    ports:
      - "8116:8005"
    volumes:
      - ./backend/storage:/app/storage
      - ./backend/storage/prompts:/app/storage/prompts
      - ./backend/storage/personalities:/app/storage/personalities
      - ./backend/storage/summary:/app/storage/summary
      - ./backend/storage/welcome-guide:/app/storage/welcome-guide
      - ./backend/storage/avatars:/app/storage/avatars
      - ./backend/storage/logs-dragoni:/app/storage/logs
      - ./backend/storage/pipeline:/app/storage/pipeline
      - ./backend/models:/app/models
      - ./backend/config:/app/config
      - ./.env.dragoni:/app/.env:ro
    depends_on:
      postgres-dragoni:
        condition: service_healthy

  frontend-dragoni:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_TARGET: http://backend-dragoni:8005
        VITE_SITE_NAME: dragoni
    restart: unless-stopped
    ports:
      - "5176:5175"
    depends_on:
      - backend-dragoni

volumes:
  pgdata-agrusti:
  pgdata-counselorbot:
  pgdata-edurag:
  pgdata-margottini:
  pgdata-pef:
  pgdata-dragoni:
