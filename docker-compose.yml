services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-qsa_chatbot}
      POSTGRES_USER: ${POSTGRES_USER:-qsa_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-qsa_pass}
    ports:
      - "5532:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend:
    build: ./backend
    restart: unless-stopped
    environment:
      GOOGLE_API_KEY: ${GOOGLE_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY:-}
      ELEVENLABS_API_KEY: ${ELEVENLABS_API_KEY:-}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-dev_super_secret_change_me}
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL:-http://192.168.129.14:11434}
      OLLAMA_MODEL: ${OLLAMA_MODEL:-gpt-oss:latest}
      POSTGRES_DB: ${POSTGRES_DB:-qsa_chatbot}
      POSTGRES_USER: ${POSTGRES_USER:-qsa_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-qsa_pass}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      DATABASE_URL: "${DATABASE_URL:-postgresql://${POSTGRES_USER:-qsa_user}:${POSTGRES_PASSWORD:-qsa_pass}@${POSTGRES_HOST:-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-qsa_chatbot}}"
      # Encryption keys (Base64 or hex 32 bytes). For dev, can also be set in backend/.env
      DATA_ENCRYPTION_KEY: ${DATA_ENCRYPTION_KEY:-}
      ESCROW_MASTER_KEY: ${ESCROW_MASTER_KEY:-}
    ports:
      - "8005:8005"
    volumes:
      - ./backend/storage:/app/storage
      - ./backend/storage/prompts:/app/storage/prompts
      - ./backend/storage/personalities:/app/storage/personalities
      - ./backend/storage/summary:/app/storage/summary
      - ./backend/storage/welcome-guide:/app/storage/welcome-guide
      - ./backend/storage/avatars:/app/storage/avatars
      - ./backend/storage/logs:/app/storage/logs
      - ./backend/storage/pipeline:/app/storage/pipeline
      - ./backend/models:/app/models
      - ./backend/config:/app/config
      - ./backend/.env:/app/.env:ro
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build: ./frontend
    restart: unless-stopped
    ports:
      - "5176:5175"
    depends_on:
      - backend

volumes:
  pgdata:
